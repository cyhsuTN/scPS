?rgamma
library(MASS)
my.rmvnegbin <- function(n, mu, Sigma, ks, ...) {
# Generate an NxD matrix of Zero-inflated poisson data,
# with counts approximately correlated according to Sigma
Cor <- cov2cor(Sigma)
#SDs <- sqrt(diag(Sigma))
#if (missing(mu)) stop('mu is required')
#if (length(mu) != length(SDs)) stop("Sigma and mu dimensions don't match")
#if (missing(ks)) {
#  ks   <- unlist(lapply(1:length(SDs), function(i) .negbin_getK(mu[i], SDs[i])))
#}
d   <- nrow(Cor)
normd  <- mvrnorm(n, rep(0, d), Sigma=Cor) # rmvnorm is replaced by mvrnorm
unif   <- pnorm(normd)
data <- t(qnbinom(t(unif), mu=mu, size=ks, ...))
#prob <- ks/(ks + mu)
#data <- t(qnbinom(t(unif), prob=prob, size=ks))
#data <- .fixInf(data)
return(data)
}
my.rmvnegbin2 <- function(n, mu, Sigma, ks, pi) {
# Generate an NxD matrix of Zero-inflated poisson data,
# with counts approximately correlated according to Sigma
Cor <- cov2cor(Sigma)
d   <- nrow(Cor)
normd  <- mvrnorm(n, rep(0, d), Sigma=Cor) # rmvnorm is replaced by mvrnorm
unif   <- pnorm(normd)
#data <- t(qnbinom(t(unif), mu=mu, size=ks, ...)+
#            qpois(t(unif), lambda = 2))
prob <- ks/(ks + mu)
data <- t(qzinb(t(unif), size=ks, prob=prob, pi=pi)) # pi: probability of extra zeros
#data <- .fixInf(data)
return(data)
}
set.seed(2025)
m <- 13 #number of subjects
n <- 60 #number of cells
mean.control <- rgamma(100, shape=2, scale=2)
FC <- rep(1, length(mean.control))
FC[1:10] <- 1.5
rho2 <- 0.05
size <- rep(1, n)
counts0 <- t(sapply(1:length(mean.control), function(i) {
mu <- rep(mean.control[i] * FC[i], n)
Sigma <- matrix(rho2, n, n); diag(Sigma) <- 1
y <- c(t(my.rmvnegbin(n=m, mu=mu1, Sigma=Sigma, ks=size)))
y
}))
counts0 <- t(sapply(1:length(mean.control), function(i) {
mu <- rep(mean.control[i] * FC[i], n)
Sigma <- matrix(rho2, n, n); diag(Sigma) <- 1
y <- c(t(my.rmvnegbin(n=m, mu=mu, Sigma=Sigma, ks=size)))
y
}))
dim(counts0)
13*60
set.seed(2025)
m <- 13 #number of subjects
n <- 60 #number of cells
mean1 <- mean2 <- rep(1, 100)
mean1[1:5] <- mean2[6:10] <- rgamma(5, shape=2, scale=2)
mean1[6:10] <- mean2[1:5] <- rgamma(5, shape=2, scale=4)
rho2 <- 0.05
size <- rep(1, n)
counts1 <- t(sapply(1:length(mean1), function(i) {
mu1 <- rep(mean1[i], n)
Sigma <- matrix(rho2, n, n); diag(Sigma) <- 1
y <- c(t(my.rmvnegbin(n=m, mu=mu1, Sigma=Sigma, ks=size)))
y
}))
dim(counts1)
counts1[1:5,1:5]
set.seed(2025)
m <- 13 #number of subjects
n <- 60 #number of cells
mean1 <- mean2 <- rep(1, 100)
mean1[1:5] <- mean2[6:10] <- rgamma(5, shape=2, scale=2)
mean1[6:10] <- mean2[1:5] <- rgamma(5, shape=2, scale=4)
rho2 <- 0.05
size <- rep(1, n)
counts1 <- t(sapply(1:length(mean1), function(i) {
mu1 <- rep(mean1[i], n)
Sigma <- matrix(rho2, n, n)
diag(Sigma) <- 1
return(t(my.rmvnegbin(n=m, mu=mu1, Sigma=Sigma, ks=size)))
}))
counts1[1:5,1:5]
my.rmvnegbin <- function(n, mu, Sigma, ks, ...) {
Cor <- cov2cor(Sigma)
d   <- nrow(Cor)
normd  <- mvrnorm(n, rep(0, d), Sigma=Cor) # rmvnorm is replaced by mvrnorm
unif   <- pnorm(normd)
data <- t(qnbinom(t(unif), mu=mu, size=ks, ...))
return(data)
}
my.rmvnegbin2 <- function(n, mu, Sigma, ks, pi) {
Cor <- cov2cor(Sigma)
d   <- nrow(Cor)
normd  <- mvrnorm(n, rep(0, d), Sigma=Cor) # rmvnorm is replaced by mvrnorm
unif   <- pnorm(normd)
prob <- ks/(ks + mu)
data <- t(qzinb(t(unif), size=ks, prob=prob, pi=pi)) # pi: probability of extra zeros
return(data)
}
set.seed(2025)
m <- 13 #number of subjects
n <- 60 #number of cells
mean1 <- mean2 <- rep(1, 100)
mean1[1:5] <- mean2[6:10] <- rgamma(5, shape=2, scale=2)
mean1[6:10] <- mean2[1:5] <- rgamma(5, shape=2, scale=4)
rho2 <- 0.08
size <- rep(1, n)
counts1 <- t(sapply(1:length(mean1), function(i) {
mu1 <- rep(mean1[i], n)
Sigma <- matrix(rho2, n, n)
diag(Sigma) <- 1
#return(t(my.rmvnegbin(n=m, mu=mu1, Sigma=Sigma, ks=size)))
return(t(my.rmvnegbin(n=m, mu=mu1, Sigma=Sigma, ks=size, pi=0)))
}))
counts1 <- t(sapply(1:length(mean1), function(i) {
mu1 <- rep(mean1[i], n)
Sigma <- matrix(rho2, n, n)
diag(Sigma) <- 1
#return(t(my.rmvnegbin(n=m, mu=mu1, Sigma=Sigma, ks=size)))
return(t(my.rmvnegbin2(n=m, mu=mu1, Sigma=Sigma, ks=size, pi=0)))
}))
library(extraDistr)
counts1 <- t(sapply(1:length(mean1), function(i) {
mu1 <- rep(mean1[i], n)
Sigma <- matrix(rho2, n, n)
diag(Sigma) <- 1
#return(t(my.rmvnegbin(n=m, mu=mu1, Sigma=Sigma, ks=size)))
return(t(my.rmvnegbin2(n=m, mu=mu1, Sigma=Sigma, ks=size, pi=0)))
}))
library(MASS)
library(extraDistr)
#### generate multivariate NB
my.rmvnegbin <- function(n, mu, Sigma, ks, ...) {
Cor <- cov2cor(Sigma)
d   <- nrow(Cor)
normd  <- mvrnorm(n, rep(0, d), Sigma=Cor) # rmvnorm is replaced by mvrnorm
unif   <- pnorm(normd)
data <- t(qnbinom(t(unif), mu=mu, size=ks, ...))
return(data)
}
#### generate multivariate zero-inflated NB
my.rmvnegbin2 <- function(n, mu, Sigma, ks, pi) {
Cor <- cov2cor(Sigma)
d   <- nrow(Cor)
normd  <- mvrnorm(n, rep(0, d), Sigma=Cor) # rmvnorm is replaced by mvrnorm
unif   <- pnorm(normd)
prob <- ks/(ks + mu)
data <- t(qzinb(t(unif), size=ks, prob=prob, pi=pi)) # pi: probability of extra zeros
return(data)
}
set.seed(2025)
m1 <- m2 <- 13 #number of subjects
n1 <- n2 <- 60 #number of cells
mean1 <- mean2 <- rep(1, 100) # 100 genes
mean1[1:5] <- mean2[6:10] <- rgamma(5, shape=2, scale=2)
mean1[6:10] <- mean2[1:5] <- rgamma(5, shape=2, scale=4)
rho <- 0.08
size1 <- rep(1, n1)
size2 <- rep(1, n2)
counts1 <- t(sapply(1:length(mean1), function(i) {
mu1 <- rep(mean1[i], n1)
Sigma <- matrix(rho, n1, n1)
diag(Sigma) <- 1
return(t(my.rmvnegbin(n=m1, mu=mu1, Sigma=Sigma, ks=size1))) #NB
#return(t(my.rmvnegbin2(n=m, mu=mu1, Sigma=Sigma, ks=size, pi=0))) #ZINB
}))
dim(counts1)
counts2 <- t(sapply(1:length(mean2), function(i) {
mu2 <- rep(mean1[i], n2)
Sigma <- matrix(rho, n2, n2)
diag(Sigma) <- 1
return(t(my.rmvnegbin(n=m1, mu=mu2, Sigma=Sigma, ks=size2))) #NB
#return(t(my.rmvnegbin2(n=m, mu=mu2, Sigma=Sigma, ks=size, pi=0))) #ZINB
}))
dim(count2)
dim(counts2)
